{"version":3,"file":"index.esm.js","sources":["../sets/warnings.js","../utils/listeners.js","../index.js"],"sourcesContent":["/**\n * @overview Console warnings\n */\nconst INITIAL = \"extended-click-outside:\";\n\nexport const ALREADY_HAS_LISTENER = `${INITIAL} element already has extended click outside listener`;\nexport const INVALID_ELEMENT = `${INITIAL} element must be a valid HTMLElement`;\nexport const INVALID_LISTENER = `${INITIAL} listener must be a function`;\nexport const MISSING_ELEMENT = `${INITIAL} element has no click outside listener`;\nexport const OUTSIDE_OF_DOCUMENT = `${INITIAL} can not run outside a document`;\n","/**\n * Determines whether given element is inside\n * root ExtendedClickOutside instance element\n * @function\n * @param {HTMLElement} element - ExtendedClickOutside root element\n * @param {HTMLElement} target - target of \"click/touchstart\" event\n * @returns {boolean} location\n */\nconst isParentElement = (element, target) => {\n  let currentTarget = target.parentNode;\n\n  while (currentTarget) {\n    if (currentTarget === element) return true;\n    if (currentTarget === document.documentElement || !currentTarget) return false;\n\n    currentTarget = currentTarget.parentNode;\n  }\n};\n\n/**\n * Determines whether to block ExtendedClickOutside\n * listener by special keys combination\n * @function\n * @param {MouseEvent} event - MouseEvent instance\n * @param {Array} [blockKeys] - list of keys\n * @returns {boolean} restriction\n */\nconst blockByKeys = (event, blockKeys) => {\n  switch (true) {\n    case !blockKeys || !blockKeys.length:\n      return false;\n    case event.altKey && blockKeys.includes(\"alt\"):\n      return true;\n    case event.ctrlKey && blockKeys.includes(\"ctrl\"):\n      return true;\n    case event.shiftKey && blockKeys.includes(\"shift\"):\n      return true;\n    default:\n      return false;\n  }\n};\n\n/**\n * Sets reusable ExtendedClickOutside listener\n * @function\n * @param {HTMLElement} element - ExtendedClickOutside root element\n * @param {Function} listener - ExtendedClickOutside listener\n * @param {boolean} capture - event \"capture\" flag\n * @param {boolean} selfOnly - only current element flag\n * @param {Array} blockKeys - list of keys\n * @param {string} eventName - type of event\n * @returns {Function} handler\n */\nexport const setListener = (\n  element,\n  listener,\n  capture,\n  passive,\n  selfOnly,\n  blockKeys,\n  eventName,\n) => {\n  const handler = (event) => {\n    const target = event.target;\n\n    if (target === element) return;\n    if (!selfOnly && isParentElement(element, target)) return;\n    if (blockByKeys(event, blockKeys)) return;\n\n    listener(event);\n  };\n\n  document.documentElement.addEventListener(eventName, handler, {\n    capture,\n    passive,\n  });\n\n  return handler;\n};\n\n/**\n * Sets disposable ExtendedClickOutside listener\n * @function\n * @param {HTMLElement} element - ExtendedClickOutside root element\n * @param {Function} listener - ExtendedClickOutside listener\n * @param {boolean} capture - event \"capture\" flag\n * @param {boolean} selfOnly - only current element flag\n * @param {Array} blockKeys - list of keys\n * @param {string} eventName - type of event\n * @param {Function} callback - removal of listener\n * @returns {Function} handler\n */\nexport const setListenerOnce = (\n  element,\n  listener,\n  capture,\n  passive,\n  selfOnly,\n  blockKeys,\n  eventName,\n  callback,\n) => {\n  const handler = (event) => {\n    const target = event.target;\n\n    if (target === element) return;\n    if (!selfOnly && isParentElement(element, target)) return;\n    if (blockByKeys(event, blockKeys)) return;\n\n    listener(event);\n    document.documentElement.removeEventListener(eventName, handler, {\n      capture,\n      passive,\n    });\n    callback();\n  };\n\n  document.documentElement.addEventListener(eventName, handler, {\n    capture,\n    passive,\n  });\n\n  return handler;\n};\n","import {\n  ALREADY_HAS_LISTENER,\n  INVALID_ELEMENT,\n  INVALID_LISTENER,\n  MISSING_ELEMENT,\n  OUTSIDE_OF_DOCUMENT,\n} from \"./sets/warnings\";\n\nimport { setListener, setListenerOnce } from \"./utils/listeners\";\n\n/**\n * ExtendedClickOutside instance constructor\n * @author Ridiger Daniil Dmitrievich, 2023\n * @class\n * @version 3.2.0\n */\nexport default class ExtendedClickOutside {\n  _clickName = !document.ontouchstart ? \"click\" : \"touchstart\";\n  _outsideListeners = new Map();\n\n  /**\n   * Initializes ExtendedClickOutside listener\n   * @method\n   * @param {HTMLElement} element - ExtendedClickOutside root element\n   * @param {Function} listener - ExtendedClickOutside listener\n   * @param {Object} [config={}] - configuration\n   */\n  init(element, listener, config = {}) {\n    let handler;\n    const blockKeys = config.blockKeys || [];\n    const capture = config.capture || false;\n    const passive = config.passive || false;\n    const once = config.once || false;\n    const selfOnly = config.selfOnly || false;\n    const useWarnings = config.useWarnings || false;\n\n    if (!element || typeof element !== \"object\") {\n      useWarnings && console.warn(INVALID_ELEMENT);\n\n      return;\n    }\n\n    if (!listener || typeof listener !== \"function\") {\n      useWarnings && console.warn(INVALID_LISTENER);\n\n      return;\n    }\n\n    if (!window || !document || !document.documentElement) {\n      useWarnings && console.warn(OUTSIDE_OF_DOCUMENT);\n\n      return;\n    }\n\n    if (this._outsideListeners.has(element)) {\n      useWarnings && console.warn(ALREADY_HAS_LISTENER);\n\n      return;\n    }\n\n    if (!element || !(element instanceof HTMLElement)) {\n      useWarnings && console.warn(INVALID_ELEMENT);\n\n      return;\n    }\n\n    if (once) {\n      handler = setListenerOnce(\n        element,\n        listener,\n        capture,\n        passive,\n        selfOnly,\n        blockKeys,\n        this._clickName,\n        () => this._outsideListeners.delete(element),\n      );\n    } else {\n      handler = setListener(\n        element,\n        listener,\n        capture,\n        passive,\n        selfOnly,\n        blockKeys,\n        this._clickName,\n      );\n    }\n\n    this._outsideListeners.set(element, {\n      handler,\n      options: {\n        capture,\n        passive,\n      },\n    });\n  }\n\n  /**\n   * Removes ExtendedClickOutside listener\n   * @method\n   * @param {HTMLElement} element - ExtendedClickOutside root element\n   * @param {boolean} [useWarnings=false] - console warnings flag\n   */\n  remove(element, useWarnings = false) {\n    if (!this._outsideListeners.has(element)) {\n      useWarnings && console.warn(MISSING_ELEMENT);\n\n      return;\n    }\n\n    const listener = this._outsideListeners.get(element);\n\n    document.documentElement.removeEventListener(\n      \"click\",\n      listener.handler,\n      listener.options,\n    );\n\n    this._outsideListeners.delete(element);\n  }\n\n  /**\n   * Removes all ExtendedClickOutside listeners\n   * @method\n   */\n  removeAllListeners() {\n    for (let listener of this._outsideListeners.values()) {\n      document.documentElement.removeEventListener(\n        \"click\",\n        listener.handler,\n        listener.options,\n      );\n    }\n\n    this._outsideListeners.clear();\n  }\n\n  /**\n   * Checks if a listener exists for the given element\n   * @method\n   * @param {HTMLElement} element - ExtendedClickOutside root element\n   * @returns {boolean} listener existen—Åe flag\n   */\n  isListenerExisting(element) {\n    return this._outsideListeners.has(element);\n  }\n\n  /**\n   * Writes root ExtendedClickOutside elements to snapshots list\n   * @method\n   * @returns {Array} snapshots\n   */\n  getCurrentSnapshots() {\n    let output = [];\n\n    for (let element of this._outsideListeners.keys()) {\n      const snapshot = element.outerHTML.match(/^(<.+?>)/is)[0];\n      output.push(snapshot);\n    }\n\n    return output;\n  }\n\n  /**\n   * Writes current ExtendedClickOutside listeners count\n   * @method\n   * @returns {number} count\n   */\n  getListenersCount() {\n    return this._outsideListeners.size;\n  }\n}\n"],"names":["INITIAL","ALREADY_HAS_LISTENER","INVALID_ELEMENT","INVALID_LISTENER","MISSING_ELEMENT","OUTSIDE_OF_DOCUMENT","isParentElement","element","target","currentTarget","parentNode","document","documentElement","blockByKeys","event","blockKeys","length","altKey","includes","ctrlKey","shiftKey","ExtendedClickOutside","_clickName","ontouchstart","_outsideListeners","Map","init","listener","config","handler","capture","passive","once","selfOnly","useWarnings","window","this","has","console","warn","HTMLElement","setListenerOnce","eventName","callback","removeEventListener","addEventListener","delete","setListener","set","options","remove","get","removeAllListeners","values","clear","isListenerExisting","getCurrentSnapshots","output","keys","snapshot","outerHTML","match","push","getListenersCount","size"],"mappings":"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"}