/*!
 * extended-click-outside v3.2.0
 * Author: Ridiger Daniil Dmitrievich <extendedmultiselect@yandex.ru>
 * Description: Advanced outside-click handler for modern web applications
 * License: MIT
 * Repository: https://github.com/danyaridiger/extended-click-outside.git
 */
const e="extended-click-outside:",t=`${e} element already has extended click outside listener`,s=`${e} element must be a valid HTMLElement`,n=`${e} listener must be a function`,i=`${e} element has no click outside listener`,o=`${e} can not run outside a document`,r=(e,t)=>{let s=t.parentNode;for(;s;){if(s===e)return!0;if(s===document.documentElement||!s)return!1;s=s.parentNode}},c=(e,t)=>{switch(!0){case!t||!t.length:return!1;case e.altKey&&t.includes("alt"):case e.ctrlKey&&t.includes("ctrl"):case e.shiftKey&&t.includes("shift"):return!0;default:return!1}};class u{_clickName=document.ontouchstart?"touchstart":"click";_outsideListeners=new Map;init(e,i,u={}){let l;const a=u.blockKeys||[],d=u.capture||!1,m=u.passive||!1,h=u.once||!1,L=u.selfOnly||!1,p=u.useWarnings||!1;e&&"object"==typeof e?i&&"function"==typeof i?window&&document&&document.documentElement?this._outsideListeners.has(e)?p&&console.warn(t):e&&e instanceof HTMLElement?(l=h?((e,t,s,n,i,o,u,l)=>{const a=d=>{const m=d.target;m!==e&&(!i&&r(e,m)||c(d,o)||(t(d),document.documentElement.removeEventListener(u,a,{capture:s,passive:n}),l()))};return document.documentElement.addEventListener(u,a,{capture:s,passive:n}),a})(e,i,d,m,L,a,this._clickName,()=>this._outsideListeners.delete(e)):((e,t,s,n,i,o,u)=>{const l=s=>{const n=s.target;n!==e&&(!i&&r(e,n)||c(s,o)||t(s))};return document.documentElement.addEventListener(u,l,{capture:s,passive:n}),l})(e,i,d,m,L,a,this._clickName),this._outsideListeners.set(e,{handler:l,options:{capture:d,passive:m}})):p&&console.warn(s):p&&console.warn(o):p&&console.warn(n):p&&console.warn(s)}remove(e,t=!1){if(!this._outsideListeners.has(e))return void(t&&console.warn(i));const s=this._outsideListeners.get(e);document.documentElement.removeEventListener("click",s.handler,s.options),this._outsideListeners.delete(e)}removeAllListeners(){for(let e of this._outsideListeners.values())document.documentElement.removeEventListener("click",e.handler,e.options);this._outsideListeners.clear()}isListenerExisting(e){return this._outsideListeners.has(e)}getCurrentSnapshots(){let e=[];for(let t of this._outsideListeners.keys()){const s=t.outerHTML.match(/^(<.+?>)/is)[0];e.push(s)}return e}getListenersCount(){return this._outsideListeners.size}}export{u as default};
//# sourceMappingURL=index.esm.js.map
